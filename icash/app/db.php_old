<?php

namespace icash\app;

class DB
{
    private $connection;
    private $statement;

    public function __construct()
    {
        echo "<h1>DB Class</h1>";
//echo "<pre>" . print_r(APP_CONFIG,1) . "</pre>";
        $cfg = APP_CONFIG['DB'];

        
        echo "<h2>Connecting to ". $cfg['host'] . " ...</h2>";

        $connectionString  = "mysql:host=" .     $cfg['host'];
        $connectionString .= ";port=" .          $cfg['port'];
        $connectionString .= ";dbname=" .       $cfg['db'];
        $connectionString .= ";charset=UTF8;";
//echo "<h3>ConnectionString: ".$connectionString."</h3>";
//echo "<h3>User: '".$cfg['user']."' Password: '".$cfg['password']."'</h3>";
        try
        {
            $this->connection = new \PDO($connectionString, $cfg['user'], $cfg['password']);
            //$this->connection = new \PDO($connectionString, "icash", "3rb9oK4$");
            
        } catch (\PDOException $e) {
            $GLOBALS['error']['DB'][] = $e->getMessage();
        }

    }

    public function query( $query ) {
        $this->statement = $this->connection->prepare( implode( " ", $query ) );
        return $this;
    }

    public function param( $param, $value ) {
        switch( true ) {
            case is_int( $value ): {
                $this->statement->bindValue( $param, $value, PDO::PARAM_INT );
                break;
            }
            case is_bool( $value ): {
                $this->statement->bindValue( $param, $value, PDO::PARAM_BOOL );
                break;
            }
            case is_null( $value ): {
                $this->statement->bindValue( $param, $value, PDO::PARAM_NULL );
                break;
            }
            default: {
                $this->statement->bindValue( $param, $value, PDO::PARAM_STR );
            }
        }
    }

    public function execute( $params = array() ) {
        if (count( $params ) > 0) {
            return $this->statement->execute( $params );
        } else {
            return $this->statement->execute();
        }
    }

    public function result($type = "FETCH_ASSOC") {
        $type = 'PDO::' . $type;
        $this->execute();
        return $this->statement->fetch( $type );
    }

    public function results($type = "FETCH_ASSOC") {
        $type = 'PDO::' . $type;
        $this->execute();
        return $this->statement->fetchAll( $type );
    }

    public function count() {
        $this->execute();
        return $this->statement->rowCount();
    }
}